from .base import ProcessingStage
import logging

logger = logging.getLogger(__name__)

class ValidationStage(ProcessingStage):
    @property
    def name(self) -> str:
        return "–í–∞–ª–∏–¥–∞—Ü–∏—è"

    def execute(self, video_info, context: dict) -> dict:
        logger.info(f"üîç {self.name}: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")

        if not video_info.input_path.exists():
            raise Exception(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {video_info.input_path}")

        if video_info.input_path.suffix.lower() != '.ts':
            raise Exception("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ .ts —Ñ–∞–π–ª—ã")

        logger.info(f"‚úÖ –§–∞–π–ª –≤–∞–ª–∏–¥–µ–Ω: {video_info.input_path}")
        logger.info(f"üìä –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {video_info.duration} —Å–µ–∫")

        return context
